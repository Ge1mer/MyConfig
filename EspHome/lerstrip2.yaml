esphome:
  name: lerstrip2
  platform: ESP8266
  board: esp12e

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  manual_ip:
    static_ip: 192.168.1.127
    gateway: 192.168.1.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lerstrip2 Fallback Hotspot"
    password: "123456789"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "str1"

ota:
  password: "str1"
  
  
i2c:
  sda: GPIO4
  scl: GPIO5
  scan: True
  id: bus_a

# Example configuration entry
pca9685:
  frequency: 500
  

light:
  - platform: rgb
    name: "Room led strip"
    red: output_component1
    green: output_component0
    blue: output_component2
    effects:
      - flicker:
          name: Flicker Effect With Custom Values
          alpha: 95%
          intensity: 15%
      - strobe:
          name: Strobe Effect With Custom Values
          colors:
            - state: True
              brightness: 100%
              red: 100%
              green: 90%
              blue: 0%
              duration: 500ms
            - state: False
              duration: 250ms
            - state: True
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - random:
          name: "My Slow Random Effect"
          transition_length: 30s
          update_interval: 30s    
      - random:
          name: "My Quick Random Effect"
          transition_length: 5s
          update_interval: 7s     
    
#remote_receiver:
#  pin: GPIO4
#  dump: all
  
output:
  - platform: pca9685
    id: 'output_component0'
    channel: 15
  - platform: pca9685
    id: 'output_component1'
    channel: 14
  - platform: pca9685
    id: 'output_component2'  
    channel: 13
  
sensor:  
  - platform: wifi_signal
    name: "Strip WiFi Signal"
    update_interval: 60s
    
  - platform: uptime
    id: device_uptime
    internal: true
#    name: "Meteostation uptime"

text_sensor:

  - platform: template
    name: "Strip uptime"
    lambda: |-
      uint32_t uptime = (id(device_uptime).state);
      int minutes = (uptime % 3600) / 60;
      int hours = (uptime % 86400) / 3600;
      int days = uptime / 86400;
      if (days > 0) {
        return { (String(days) + " д." + String(hours) + " ч." + String(minutes) + " мин.").c_str() };
      }
      if (hours > 0) {
        return { (String(hours) + " ч. " + String(minutes) + " мин.").c_str() };
      } else {
        return { (String(minutes) + " мин.").c_str() };
      }
    update_interval: 60s
    icon: mdi:clock-start
    
switch:
  - platform: restart
    name: "Strip restart"
